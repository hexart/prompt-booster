name: Release Desktop App

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送版本标签时触发

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "release"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10.9.0'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build web & packages
        run: pnpm build
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './apps/web/dist'

  # 桌面客户端构建job
  build-desktop:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10.9.0'
      
      - name: Install dependencies
        run: pnpm install
          
      - name: Build packages
        run: pnpm build:packages
        
      - name: Install desktop dependencies (npm)
        working-directory: ./apps/desktop
        run: npm install
          
      # Windows构建
      - name: Build desktop app for Windows
        if: matrix.os == 'windows-latest'
        working-directory: ./apps/desktop
        run: npm run build:win-ci
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Linux构建
      - name: Build desktop app for Linux
        if: matrix.os == 'ubuntu-latest'
        working-directory: ./apps/desktop
        run: npm run build:linux-ci
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # 上传构建产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desktop-artifacts-${{ matrix.os }}
          path: |
            ./apps/desktop/release/*.exe
            ./apps/desktop/release/*.zip
            ./apps/desktop/release/*.AppImage
            ./apps/desktop/release/*.deb
            ./apps/desktop/release/*.rpm
          if-no-files-found: ignore

  # 创建GitHub Release
  create-release:
    needs: build-desktop
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Display structure of downloaded files
        run: ls -R artifacts
          
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Prompt Booster ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/desktop-artifacts-windows-latest/**
            artifacts/desktop-artifacts-ubuntu-latest/**

  deploy-pages:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4