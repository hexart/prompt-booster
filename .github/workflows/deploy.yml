name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pages: write
  id-token: write

concurrency:
  group: "deploy"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "10.9.0"

      - name: Install dependencies
        run: pnpm install

      - name: Build web & packages
        run: pnpm build

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./apps/web/dist"

  # 优先部署Pages
  deploy-pages:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # 部署到宝塔服务器
  # deploy-baota:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Pages artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: github-pages
  #         path: ./dist

  #     - name: Extract artifact
  #       run: |
  #         cd ./dist
  #         tar -xf artifact.tar

  #     - name: Deploy to FTP Server
  #       uses: SamKirkland/FTP-Deploy-Action@v4.3.5
  #       with:
  #         server: 8.153.168.177
  #         username: hexart
  #         password: ${{ secrets.FTP_PASSWORD }}
  #         local-dir: ./dist/
  #         server-dir: ./
  #         dangerous-clean-slate: true

  # Docker构建作业
  build-docker:
    runs-on: ubuntu-latest
    needs: deploy-pages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/frontend.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
