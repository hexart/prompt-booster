name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install root dependencies
        run: pnpm install

      - name: Build web & packages
        run: pnpm build

      # üëâ Ê∑ªÂä† Electron Desktop ÊûÑÂª∫Ôºàmac ÁâàÔºâ
      - name: Install desktop deps
        run: cd apps/desktop && npm install

      - name: Build Electron desktop (mac)
        run: cd apps/desktop && npm run build:mac:universal

      - name: Publish GitHub Release with desktop app
        run: cd apps/desktop && npx electron-builder --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # üëâ Â§öÂπ≥Âè∞ Docker ÊûÑÂª∫
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/frontend.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Make Docker package public
        run: |
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.PACKAGE_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"visibility":"public"}' \
            "https://api.github.com/user/packages/container/${{ github.event.repository.name }}"
          echo "Package visibility changed to public"